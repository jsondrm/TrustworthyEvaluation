<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.soft.eva.dao.UserDao">

    <select id="get" resultType="com.soft.eva.domain.User">
		select `userId`,`username`,`password`,`dptName`,`group`,`email`,`mobile`,`status` from sys_user where userId = #{value}
	</select>

    <select id="getByUsername" resultType="com.soft.eva.domain.User">
		select `userId`,`username`,`password`,`dptName`,`group`,`email`,`mobile`,`status` from sys_user where username = #{value}
	</select>

    <select id="list" resultType="com.soft.eva.domain.User">
        select
        `userId`,`username`,`password`,`dptName`,`group`,`email`,`mobile`,`status`
        from sys_user
        <where>
            <if test="userId != null and userId != ''">and userId = #{userId}</if>
            <if test="username != null and username != ''">and username = #{username}</if>
            <if test="password != null and password != ''">and password = #{password}</if>
            <if test="dptName != null and dptName != ''">and dptName = #{dptName}</if>
            <if test="group != null and group != ''">and group = #{group}</if>
            <if test="email != null and email != ''">and email = #{email}</if>
            <if test="mobile != null and mobile != ''">and mobile = #{mobile}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by userId desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from sys_user
        <where>
            <if test="userId != null and userId != ''">and userId = #{userId}</if>
            <if test="username != null and username != ''">and username = #{username}</if>
            <if test="password != null and password != ''">and password = #{password}</if>
            <if test="dptName != null and dptName != ''">and dptName = #{dptName}</if>
            <if test="group != null and group != ''">and group = #{group}</if>
            <if test="email != null and email != ''">and email = #{email}</if>
            <if test="mobile != null and mobile != ''">and mobile = #{mobile}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
        </where>
    </select>

    <insert id="save" parameterType="com.soft.eva.domain.User" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			`username`,
			`password`,
			`dptName`,
			`group`,
			`email`,
			`mobile`,
			`status`
		)
		values
		(
			#{username},
			#{password},
			#{dptName},
			#{group},
			#{email},
			#{mobile},
			#{status}
		)
	</insert>

    <update id="update" parameterType="com.soft.eva.domain.User">
        update sys_user
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="password != null">`password` = #{password},</if>
            <if test="dptName != null">`dptName` = #{dptName},</if>
            <if test="group != null">`group` = #{group},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="mobile != null">`mobile` = #{mobile},</if>
            <if test="status != null">`status` = #{status},</if>
        </set>
        where userId = #{userId}
    </update>

    <delete id="remove">
		delete from sys_user where userId = #{value}
	</delete>

    <delete id="batchRemove">
        delete from sys_user where userId in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>